/**
 * This file was generated by the Jeddict
 */
package com.udea.webconcesionaire.entity;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * @author marit
 */
@Entity(name = "Sale") 
public class Sale {

    @Column(unique = true, nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Long sale_id;

    @Basic
    @Temporal(TemporalType.DATE)
    private Date  sale_date;

    @Basic
    private double sale_price;

    @OneToMany(mappedBy = "sale")
    private List<Customer> customers;

    @ManyToMany(mappedBy = "sales")
    private List<Vehicle> vehicles;

    public Sale(Long sale_id, Date  sale_date, double sale_price, List<Customer> customers, List<Vehicle> vehicles) {
        this.sale_id = sale_id;
        this.sale_date = sale_date;
        this.sale_price = sale_price;
        this.customers = customers;
        this.vehicles = vehicles;
    }

    public Sale() {
    }

    public Long getSale_id() {
        return this.sale_id;
    }

    public void setSale_id(Long sale_id) {
        this.sale_id = sale_id;
    }

    public Date  getSale_date() {
        return this.sale_date;
    }

    public void setSale_date(Date  sale_date) {
        this.sale_date = sale_date;
    }

    public double getSale_price() {
        return this.sale_price;
    }

    public void setSale_price(double sale_price) {
        this.sale_price = sale_price;
    }

    public List<Customer> getCustomers() {
        if (customers == null) {
            customers = new ArrayList<>();
        }
        return this.customers;
    }

    public void setCustomers(List<Customer> customers) {
        this.customers = customers;
    }

    public void addCustomer(Customer customer) {
        getCustomers().add(customer);
        customer.setSale(this);
    }

    public void removeCustomer(Customer customer) {
        getCustomers().remove(customer);
        customer.setSale(null);
    }

    public List<Vehicle> getVehicles() {
        if (vehicles == null) {
            vehicles = new ArrayList<>();
        }
        return this.vehicles;
    }

    public void setVehicles(List<Vehicle> vehicles) {
        this.vehicles = vehicles;
    }

    public void addVehicle(Vehicle vehicle) {
        getVehicles().add(vehicle);
    }

    public void removeVehicle(Vehicle vehicle) {
        getVehicles().remove(vehicle);
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (!Objects.equals(getClass(), obj.getClass())) {
            return false;
        }
        final Sale other = (Sale) obj;
        if (!java.util.Objects.equals(this.getSale_id(), other.getSale_id())) {
            return false;
        }
        return true;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Objects.hashCode(this.getSale_id());
        return hash;
    }

    @Override
    public String toString() {
        return "Sale{" + " sale_id=" + sale_id + ", sale_date=" + sale_date + ", sale_price=" + sale_price + ", customers=" + customers + ", vehicles=" + vehicles + '}';
    }

}